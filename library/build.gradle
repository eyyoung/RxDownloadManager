apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 22
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resValue "string", "downloadmanager_authorities", 'com.nd.android.sdp.dm.test.provider'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

retrolambda {
    javaVersion JavaVersion.VERSION_1_7
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:22.2.1'
//    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'io.reactivex:rxjava:1.0.14'
    compile 'com.nd.android.smartcan:smart-okhttp:2.2.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.android.support.test:runner:0.3'
    androidTestCompile 'com.android.support.test:rules:0.3'
}

tasks.withType(JavaCompile) { options.encoding = "UTF-8" }


apply plugin: 'maven'
uploadArchives {
    try {
        repositories {
            mavenDeployer {
                repository(url: "http://nexus.sdp.nd/nexus/content/repositories/android-3rd/") {
                    authentication(userName: mavenUser, password: mavenPassword)
                }
                pom.version = "0.2.9"
                pom.artifactId = "downloadmanager"
                pom.groupId = "com.nd.android.sdp.common"
            }
        }
    } catch (java.lang.Exception e) {
    }
}